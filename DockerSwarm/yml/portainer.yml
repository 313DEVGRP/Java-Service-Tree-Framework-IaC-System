version: '3.6'

services:

  agent:
    image: portainer/agent:2.11.0
    #environment:
      # REQUIRED: Should be equal to the service name prefixed by "tasks." when
      # deployed inside an overlay network
      #- "AGENT_CLUSTER_ADDR=tasks.agent"
      #- "AGENT_PORT=9001"
      #- "LOG_LEVEL=debug"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/lib/docker/volumes:/var/lib/docker/volumes
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    networks:
      - portainer_network
    deploy:
      mode: global
    logging:
      driver: fluentd
      options:
        fluentd-address: 192.168.25.32:24224
        fluentd-async-connect: "true"
        fluentd-retry-wait: "1s"
        fluentd-max-retries: "30"
        tag: portaineragent

  portainer:
    image: portainer/portainer-ce:2.11.0
    command: -H tcp://tasks.agent:9001 --tlsskipverify
    ports:
      - "9443:9443"
      - "9009:9000"
      - "8008:8000"
    volumes:
      - portainer_data:/data
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    networks:
      - portainer_network
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints: [node.hostname == k8s1]
    logging:
      driver: fluentd
      options:
        fluentd-address: 192.168.25.32:24224
        fluentd-async-connect: "true"
        fluentd-retry-wait: "1s"
        fluentd-max-retries: "30"
        tag: portainer

  nginx:
    image: nginx:1.19.10
    ports:
      - 80:80
    volumes:
      - nginxConf:/etc/nginx
      - nginxWWW:/usr/share/nginx/html
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    extra_hosts: &addHost
      - "313.co.kr:192.168.25.31"
      - "db.313.co.kr:192.168.25.40"
      - "nas.313.co.kr:192.168.25.42"
      - "www.313.co.kr:192.168.25.31"
      - "ubuntu.313.co.kr:192.168.25.31"
    networks:
      - portainer_network
    deploy:
      mode: global
    logging:
      driver: fluentd
      options:
        fluentd-address: 192.168.25.32:24224
        fluentd-async-connect: "true"
        fluentd-retry-wait: "1s"
        fluentd-max-retries: "30"
        tag: nginx

  grafana:
    image: portainer/template-swarm-monitoring:grafana-9.5.2
    ports:
      - target: 3000
        published: 3000
        protocol: tcp
        mode: ingress
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      placement:
        constraints:
          - node.role == manager
          - node.labels.monitoring == true
    volumes:
      - type: volume
        source: grafana-data
        target: /var/lib/grafana
      - type: volume
        source: grafana-etc
        target: /etc/grafana
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=qwe123
      - GF_USERS_ALLOW_SIGN_UP=false
      #- GF_AUTH_ANONYMOUS_ENABLED=true
      #- GF_SECURITY_ALLOW_EMBEDDING=true
    networks:
      - portainer_network
    logging:
      driver: fluentd
      options:
        fluentd-address: 192.168.25.32:24224
        fluentd-async-connect: "true"
        fluentd-retry-wait: "1s"
        fluentd-max-retries: "30"
        tag: grafana

  prometheus:
    image: portainer/template-swarm-monitoring:prometheus-v2.44.0
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--log.level=error'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.time=7d'
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      placement:
        constraints:
          - node.role == manager
          - node.labels.monitoring == true
#      resources:
#            limits:
#              cpus: "0.50"
#              memory: 2048M
#            reservations:
#              cpus: "0.10"
#              memory: 1024M
    volumes:
      - type: volume
        source: prometheus-data
        target: /prometheus
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    networks:
      - portainer_network
    logging:
      driver: fluentd
      options:
        fluentd-address: 192.168.25.32:24224
        fluentd-async-connect: "true"
        fluentd-retry-wait: "1s"
        fluentd-max-retries: "30"
        tag: prometheus

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.47.0
    command: -logtostderr -docker_only
    deploy:
      mode: global
#      resources:
#        limits:
#          memory: 128M
#        reservations:
#          memory: 64M
    volumes:
      - type: bind
        source: /
        target: /rootfs
        read_only: true
      - type: bind
        source: /var/run
        target: /var/run
        read_only: true
      - type: bind
        source: /sys
        target: /sys
        read_only: true
      - type: bind
        source: /var/lib/docker
        target: /var/lib/docker
        read_only: true
      - type: bind
        source: /dev/disk
        target: /dev/disk
        read_only: true    
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    networks:
      - portainer_network
    logging:
      driver: fluentd
      options:
        fluentd-address: 192.168.25.32:24224
        fluentd-async-connect: "true"
        fluentd-retry-wait: "1s"
        fluentd-max-retries: "30"
        tag: cadvisor

  node-exporter:
    image: prom/node-exporter:v1.5.0
    command:
      - '--path.sysfs=/host/sys'
      - '--path.procfs=/host/proc'
      - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)'
      - '--no-collector.ipvs'
    deploy:
      mode: global
#      resources:
#        limits:
#          memory: 128M
#        reservations:
#          memory: 64M
    volumes:
      - type: bind
        source: /
        target: /rootfs
        read_only: true
      - type: bind
        source: /proc
        target: /host/proc
        read_only: true
      - type: bind
        source: /sys
        target: /host/sys
        read_only: true
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    networks:
      - portainer_network
    logging:
      driver: fluentd
      options:
        fluentd-address: 192.168.25.32:24224
        fluentd-async-connect: "true"
        fluentd-retry-wait: "1s"
        fluentd-max-retries: "30"
        tag: nodeexporter

volumes:

  portainer_data:
    driver: local
    driver_opts:
      type: "nfs"
      o: "addr=${NFSSERVER:-1.2.3.4},nolock,soft,rw,sync"
      device: ":${NFSPATH:-/nfspath}/portainer/data"

  nginxWWW:
    driver: local
    driver_opts:
      type: "nfs"
      o: "addr=${NFSSERVER:-1.2.3.4},nolock,soft,rw,sync"
      device: ":/volume1/web"

  nginxConf:
    driver: local
    driver_opts:
      type: "nfs"
      o: "addr=${NFSSERVER:-1.2.3.4},nolock,soft,rw,sync"
      device: ":${NFSPATH:-/nfspath}/portainer/nginx/conf"

  grafana-data:
    driver: local
    driver_opts:
      type: "nfs"
      o: "addr=${NFSSERVER:-1.2.3.4},nolock,soft,rw,sync"
      device: ":${NFSPATH:-/nfspath}/portainer/grafana/data"

  grafana-etc:
    driver: local
    driver_opts:
      type: "nfs"
      o: "addr=${NFSSERVER:-1.2.3.4},nolock,soft,rw,sync"
      device: ":${NFSPATH:-/nfspath}/portainer/grafana/etc"

  prometheus-data:
    driver: local
    driver_opts:
      type: "nfs"
      o: "addr=${NFSSERVER:-1.2.3.4},nolock,soft,rw,sync"
      device: ":${NFSPATH:-/nfspath}/portainer/prometheus/data"

networks:
  portainer_network:
    driver: overlay
